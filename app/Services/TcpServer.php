<?php
namespace App\Services;

use React\Socket\Server;
use React\EventLoop\Factory;

class TcpServer
{
    public function start()
    {
        $loop = Factory::create();
        $server = new Server('0.0.0.0:16994', $loop);

        $server->on('connection', function ($connection) {
            echo "๐ด Scooter Connected!\n";

            $connection->on('data', function ($data) use ($connection) {
                echo "๐ฉ Received Data: " . bin2hex($data) . "\n";

                // ุชุญูู ููุง ุฅุฐุง ูุงู ุงูุทูุจ ูุชุญ ุงูููู
                if ($data === hex2bin('01020304')) { // ุงุณุชุจุฏู ุจุงูููุฏ ุงูุตุญูุญ ูู ุงูุจุฑูุชูููู
                    $unlockCommand = hex2bin('AABBCCDD'); // ุงุณุชุจุฏู ุจุงูููุฏ ุงูุตุญูุญ ููุชุญ ุงูููู
                    $connection->write($unlockCommand);
                    echo "โ Unlock command sent!\n";
                }
            });

            $connection->on('close', function () {
                echo "๐ Scooter Disconnected!\n";
            });
        });

        echo "๐ TCP Server Started on port 9000...\n";
        $loop->run();
    }

    public function sendUnlockCommand($ip, $port)
    {
        // ุฅุนุฏุงุฏ ุงูุจูุงูุงุช ุงููุฑุณูุฉ ููููุง ููุจุฑูุชูููู
        $STX = "\xA3\xA4"; // ุฑุฃุณ ุงูุฅุทุงุฑ
        $LEN = "\x05"; // ุทูู ุงูุจูุงูุงุช
        $RAND = random_bytes(1); // ุฑูู ุนุดูุงุฆู ููุฃูุงู
        $KEY = "\x34"; // ููุชุงุญ ุงูุงุชุตุงู (ูุฌุจ ุชุบููุฑู ุจูุงุกู ุนูู ุงูููู)
        $CMD = "\x05"; // ุฃูุฑ ูุชุญ ุงูููู
        $DATA = "\x01"; // ูุฌุงุญ
        $TIMESTAMP = "\x00\x00\x00\x01"; // ุชูููุช ุฒููู ุงูุชุฑุงุถู
        $CRC = "\x00"; // ูุฌุจ ุญุณุงุจ CRC8 ุงูุตุญูุญ

        // ุฏูุฌ ุงูุจูุงูุงุช ูู ุณูุณูุฉ ูุงุญุฏุฉ
        $command = $STX . $LEN . $RAND . $KEY . $CMD . $DATA . $TIMESTAMP . $CRC;

        // ุฅูุดุงุก ุงุชุตุงู TCP
        $socket = socket_create(AF_INET, SOCK_STREAM, SOL_TCP);
        if ($socket === false) {
            return "โ ูุดู ุฅูุดุงุก ุงูุงุชุตุงู: " . socket_strerror(socket_last_error());
        }

        // ุงูุงุชุตุงู ุจุงูููู
        $result = socket_connect($socket, $ip, $port);
        if ($result === false) {
            return "โ ูุดู ุงูุงุชุตุงู ุจุงูููู: " . socket_strerror(socket_last_error($socket));
        }

        // ุฅุฑุณุงู ุงูุจูุงูุงุช
        socket_write($socket, $command, strlen($command));

        // ุงุณุชูุจุงู ุงูุฑุฏ ูู ุงูููู
        $response = socket_read($socket, 1024);
        socket_close($socket);

        return "๐ ุฑุฏ ุงูููู: " . bin2hex($response);
    }
}

